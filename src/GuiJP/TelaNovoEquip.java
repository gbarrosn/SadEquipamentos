/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GuiJP;

import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.ArrayList;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import ClassesBasicasJP.Equipamentos;
import ClassesBasicasJP.Fornecedor;
import Geral.Fachada;
import Login.LoginUser;

/**
 *
 * @author joao.paulo
 */
public class TelaNovoEquip extends javax.swing.JFrame {

    /**
     * Creates new form TelaNovoEquipHP
     */
    public TelaNovoEquip() {
        initComponents();
        setTitle("Novo Equipamento");
        setLocationRelativeTo(null);
    }
    private LoginUser logado;
    private Fornecedor escolhido;
    ArrayList<Fornecedor> listaForn;

    public TelaNovoEquip(LoginUser logado) {
        initComponents();
        setTitle("Novo Equipamento");
        setLocationRelativeTo(null);
        this.logado = logado;
        jTextFieldTombamento.setText("000000");
        //TRATANDO COMBOBOX TIPO
        jTextFieldOutraCateg.setEnabled(false);
        jTextFieldOutraCateg.setText("Outra categoria aqui");
        //CONSULTANDO FORN
        jMenuConsultarEscolherForn.doClick();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textField1 = new java.awt.TextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxCategoria = new javax.swing.JComboBox<>();
        try{
            DecimalFormat df = new DecimalFormat("00,000.0000"); 
            jTextFieldValUnitario = new javax.swing.JFormattedTextField(df);
        }catch(Exception ex){

        }

        jTextFieldValUnitario = new javax.swing.JTextField();

        jLabel3 = new javax.swing.JLabel();
        jTextFieldEspecificacao = new javax.swing.JTextField();
        jButtonCadastrar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jSpinnerReplicar = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        jTextFieldTombamento = new javax.swing.JTextField();
        jTextFieldOutraCateg = new javax.swing.JTextField();
        jButtonVoltar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabelaFornecedor = new javax.swing.JTable();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        jLabel1 = new javax.swing.JLabel();
        jLabelAjuda = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabeltomb1 = new javax.swing.JLabel();
        jComboBoxTomb2 = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jTextFieldNumSerie = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuConsultarEscolherForn = new javax.swing.JMenuItem();

        textField1.setText("textField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 0, 51));
        jLabel5.setText(" NOVO EQUIPAMENTO");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel2.setText("Categoria:");

        jComboBoxCategoria.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jComboBoxCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione o tipo do equipamento", "BGR", "BRG", "CPU", "ESTABILIZADOR", "IMPRESSORA", "MICRO", "MONITOR", "MOUSE", "NO BREAK", "NOTEBOOK", "PEN DRIVE", "SCANNER", "SWITCH", "TECLADO", "OUTRO" }));
        jComboBoxCategoria.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxCategoriaItemStateChanged(evt);
            }
        });

        jTextFieldValUnitario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldValUnitarioFocusLost(evt);
            }
        });
        jTextFieldValUnitario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldValUnitarioActionPerformed(evt);
            }
        });
        jTextFieldValUnitario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldValUnitarioKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Especificação:");

        jTextFieldEspecificacao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldEspecificacaoKeyPressed(evt);
            }
        });

        jButtonCadastrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Icons/diskette_32.png"))); // NOI18N
        jButtonCadastrar.setText("Salvar");
        jButtonCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCadastrarActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Valor Unitário:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Replicar:");

        jSpinnerReplicar.setModel(new javax.swing.SpinnerNumberModel(1, 1, 100, 1));
        jSpinnerReplicar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jSpinnerReplicarKeyPressed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setText("Tombamento:");

        jTextFieldTombamento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldTombamentoKeyPressed(evt);
            }
        });

        jTextFieldOutraCateg.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldOutraCategKeyPressed(evt);
            }
        });

        jButtonVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Icons/arrow_left_32.png"))); // NOI18N
        jButtonVoltar.setText("Voltar");
        jButtonVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVoltarActionPerformed(evt);
            }
        });

        TabelaFornecedor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Cnpj", "Fornecedor"
            }
        ));
        jScrollPane1.setViewportView(TabelaFornecedor);

        jLabel1.setText("Ajuda:");

        jLabelAjuda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Icons/help_32.png"))); // NOI18N
        jLabelAjuda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelAjudaMouseClicked(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel4.setText("Ex: 1234567.00");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel6.setText("O campo Valor Unitário deve conter apenas duas casas depois do \".\"");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 102));
        jLabel9.setText("Atenção:");

        jLabeltomb1.setText("120101.");

        jComboBoxTomb2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { ".2016", ".2017", ".2018", ".2019", ".2020", ".2021", ".2022", ".2023", ".2024", ".2025" }));

        jLabel11.setText("Número Série:");

        jMenu1.setText("Arquivo");

        jMenuConsultarEscolherForn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuConsultarEscolherForn.setText("Consultar");
        jMenuConsultarEscolherForn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuConsultarEscolherFornActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuConsultarEscolherForn);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(24, 24, 24)
                        .addComponent(jLabeltomb1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldTombamento, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxTomb2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(21, 21, 21)
                        .addComponent(jComboBoxCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldOutraCateg, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSpinnerReplicar, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonCadastrar))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldValUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel9)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldNumSerie, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(13, 13, 13)
                                .addComponent(jTextFieldEspecificacao, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonVoltar)
                        .addGap(37, 37, 37))))
            .addGroup(layout.createSequentialGroup()
                .addGap(404, 404, 404)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelAjuda)
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel1)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabelAjuda)))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jComboBoxCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldOutraCateg, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10)
                                    .addComponent(jTextFieldTombamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabeltomb1)
                                    .addComponent(jComboBoxTomb2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel11)
                                    .addComponent(jTextFieldNumSerie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(97, 97, 97))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 59, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextFieldEspecificacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jTextFieldValUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jSpinnerReplicar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(jButtonCadastrar)
                            .addComponent(jButtonVoltar))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxCategoriaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxCategoriaItemStateChanged
        if (jComboBoxCategoria.getSelectedItem().equals("OUTRO")) {
            jTextFieldOutraCateg.setText("");
            jTextFieldOutraCateg.setEnabled(true);
            jTextFieldOutraCateg.requestFocus();

        } else {
            jTextFieldOutraCateg.setText("Digite o outro TIPO aqui");
            jTextFieldOutraCateg.setEnabled(false);
        }
    }//GEN-LAST:event_jComboBoxCategoriaItemStateChanged

    private void jTextFieldValUnitarioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldValUnitarioFocusLost
        jTextFieldEspecificacao.requestFocus();
    }//GEN-LAST:event_jTextFieldValUnitarioFocusLost

    private void jTextFieldValUnitarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldValUnitarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldValUnitarioActionPerformed

    private void jButtonCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCadastrarActionPerformed
        try {
            if (TabelaFornecedor.getSelectedRow() >= 0) {
                Fornecedor forn = new Fornecedor();
                Equipamentos equipHP = new Equipamentos();
                forn = listaForn.get(TabelaFornecedor.getSelectedRow());
                //TRATANDO REPLICAR
                Object replicar = jSpinnerReplicar.getValue();
                equipHP.setReplicar(Integer.parseInt(replicar.toString()));

                if (equipHP.getReplicar() > 1) {//---------------------------------CADASTRANDO MAIS DE UM EQUIPAMENTO
                    for (int i = 0; i < equipHP.getReplicar(); i++) {

                        //TOMBAMENTO
                     //   if (jTextFieldTombamento.toString().length() > 6 || jTextFieldTombamento.toString().length() < 6) {
                      //      throw new Exception("Informe somente 6 caracteres para o tombamento");
                            
                       // }else
                        if (jTextFieldTombamento.getText().matches("[a-zA-Z]*")) {
                                throw new Exception("Informe somente números no campo Tombamento");
                            } else {
                                Object selecionetombo = jComboBoxTomb2.getSelectedItem();
                                equipHP.setTombamento(jLabeltomb1.getText() + jTextFieldTombamento.getText().trim() + selecionetombo.toString().trim());
                            }

                            //TRATANDO COMBOBOX:    
                            if (!jComboBoxCategoria.getSelectedItem().equals("Selecione o tipo do equipamento")) {
                                if (!jComboBoxCategoria.getSelectedItem().equals("OUTRO")) {
                                    Object selecionetipo = jComboBoxCategoria.getSelectedItem();
                                    equipHP.setCategoria(selecionetipo.toString().trim());
                                } else {
                                    if (jTextFieldOutraCateg.getText().trim().equals("") || jTextFieldOutraCateg.getText() == null) {
                                        throw new Exception("Ao selecionar OUTRO, preencha o campo ao lado informando qual a categoria do equipamento");
                                    } else {
                                        equipHP.setCategoria(jTextFieldOutraCateg.getText().trim().toUpperCase());
                                    }
                                }
                            } else {
                                throw new Exception("Selecione o uma categoria para este equipamento");
                            }

                            //TRATANDO CAMPO VALOR UNITÁRIO:
                            if (jTextFieldValUnitario.getText() == null || jTextFieldValUnitario.getText().trim().equals("")) {
                                throw new Exception("Informe o valor do equipamento no campo Valor Unitario");

                            } else if (jTextFieldValUnitario.getText().matches("[a-zA-Z]*")) {
                                throw new Exception("Informe somente números no campo Valor Unitário");

                            } else if (jTextFieldValUnitario.getText().matches("[0-9]*\\.[0-9]*")) {

                                String recebendo = jTextFieldValUnitario.getText();
                                BigDecimal valor = new BigDecimal(recebendo);
                                NumberFormat nf = NumberFormat.getNumberInstance();
                                String formatado = nf.format(valor);
                                equipHP.setValUnitario(formatado);

                            } else {
                                throw new Exception("Informe somente números e ponto para as casas decimais no campo Valor Unitário(EX: 12345.98) ");
                            }
                            //RECEBENDO DADOS DOS OUTROS CAMPOS
                            equipHP.setEspecificacao(jTextFieldEspecificacao.getText().trim().toUpperCase());
                            
                            //RECEBENDO NUMERO DE SERIE
                            equipHP.setSerie(jTextFieldNumSerie.getText().trim().toUpperCase());

                            //RECEBENDO VALOR ESCOLHIDO DO TIPO FORNECEDOR                    
                            equipHP.setCnpj_forn(forn);

                            Fachada.getInstancia().cadastrarEquipamentos(equipHP);
                        }
                        JOptionPane.showMessageDialog(rootPane, "Equipamento " + equipHP.getEspecificacao().trim() + " foi cadastrado " + equipHP.getReplicar() + " vezes com sucesso!");

                        
                        
                        
                    }else {//----------------------------------------------CADASTRANDO SOMENTE 1 EQUIPAMENTO

                    //TOMBAMENTO
                    if (jTextFieldTombamento.getText().matches("[a-zA-Z]*")) {
                        throw new Exception("Informe somente números no campo Tombamento");
                    } else {
                        Object selecionetombo = jComboBoxTomb2.getSelectedItem();
                        equipHP.setTombamento(jLabeltomb1.getText() + jTextFieldTombamento.getText().trim() + selecionetombo.toString().trim());
                    }

                    //TRATANDO COMBOBOX   
                    if (!jComboBoxCategoria.getSelectedItem().equals("Selecione o tipo do equipamento")) {
                        if (!jComboBoxCategoria.getSelectedItem().equals("OUTRO")) {
                            Object selecionetipo = jComboBoxCategoria.getSelectedItem();
                            equipHP.setCategoria(selecionetipo.toString().trim());
                        } else {
                            if (jTextFieldOutraCateg.getText().trim().equals("") || jTextFieldOutraCateg.getText() == null) {
                                throw new Exception("Ao selecionar OUTRO, preencha o campo ao lado informando qual a categoria do equipamento");
                            } else {
                                equipHP.setCategoria(jTextFieldOutraCateg.getText().trim().toUpperCase());
                            }
                        }
                    } else {
                        throw new Exception("Selecione o uma categoria para este equipamento");
                    }

                    //TRATANDO CAMPO VALOR UNITÁRIO:
                    if (jTextFieldValUnitario.getText() == null || jTextFieldValUnitario.getText().trim().equals("")) {
                        throw new Exception("Informe o valor do equipamento no campo Valor Unitario");

                    } else if (jTextFieldValUnitario.getText().matches("[a-zA-Z]*")) {
                        throw new Exception("Informe somente números no campo Valor Unitáriodo");

                    } else if (jTextFieldValUnitario.getText().matches("[0-9]*\\.[0-9]*")) {

                        String recebendo = jTextFieldValUnitario.getText();
                        BigDecimal valor = new BigDecimal(recebendo);
                        NumberFormat nf = NumberFormat.getNumberInstance();
                        String formatado = nf.format(valor);
                        equipHP.setValUnitario(formatado);

                    } else {
                        throw new Exception("Informe somente números(ex: 12345.98) no campo Valor Unitário");
                    }
                    //RECEBENDO DADOS DOS OUTROS CAMPOS
                    equipHP.setEspecificacao(jTextFieldEspecificacao.getText().trim().toUpperCase());
                    
                    //RECEBENDO NUMERO DE SERIE
                    equipHP.setSerie(jTextFieldNumSerie.getText().trim().toUpperCase());

                    //RECEBENDO OBJETO ESCOLHIDO DO TIPO FORNECEDOR                    
                    equipHP.setCnpj_forn(forn);

                    Fachada.getInstancia().cadastrarEquipamentos(equipHP);
                    JOptionPane.showMessageDialog(rootPane, "Equipamento " + equipHP.getEspecificacao().trim() + " cadastrado com sucesso!");

                }
                } else {
                    throw new Exception("Para cadastrar este equipamento, selecione o fornecedor  do mesmo na tabela");
                }
            }catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, " Erro: " + ex.getMessage());
        }
    }//GEN-LAST:event_jButtonCadastrarActionPerformed

    private void jButtonVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVoltarActionPerformed
        TelaConsultaEquip consult = new TelaConsultaEquip(this.logado);
        consult.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButtonVoltarActionPerformed

    private void jMenuConsultarEscolherFornActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuConsultarEscolherFornActionPerformed
        try {

            listaForn = Fachada.getInstancia().listaEscolherForn();
            DefaultTableModel tabelaFornecedor = new DefaultTableModel() {
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            ;

            };

            tabelaFornecedor.setColumnIdentifiers(new String[]{"Cnpj", "Fornecedor"});
            TabelaFornecedor.getColumnModel().getColumn(0).setMaxWidth(160);
            TabelaFornecedor.getColumnModel().getColumn(1).setMaxWidth(380);

            for (Fornecedor forn : listaForn) {

                tabelaFornecedor.addRow(new String[]{forn.getCnpj(), forn.getNome()});

                TabelaFornecedor.setModel(tabelaFornecedor);
                TabelaFornecedor.getColumnModel().getColumn(0).setMaxWidth(160);
                TabelaFornecedor.getColumnModel().getColumn(1).setMaxWidth(380);

            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro:" + ex.getMessage());
        }
    }//GEN-LAST:event_jMenuConsultarEscolherFornActionPerformed

    private void jLabelAjudaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelAjudaMouseClicked
        JOptionPane.showMessageDialog(rootPane, "Para adicionar um novo equipamento você deve:\n"
                + "- Inserir os dados nos campos;\n"
                + "- Escolher uma opção de categoria(caso não tenha a opção, selecione OUTRO e informe no campo a categoria)\n"
                + "- Selecionar um fornecedor da tabela de fornecedores\n"
                + "- Clique em salvar para concluir "
                + "\n"
                + "\n"
                + "- OBS: Caso queira adicionar varios equipamentos iguais, você pode colocar o numero desse equipamento que deseja cadastrar no replicar\n");
    }//GEN-LAST:event_jLabelAjudaMouseClicked

    private void jTextFieldOutraCategKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldOutraCategKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jButtonCadastrar.doClick();
        }
    }//GEN-LAST:event_jTextFieldOutraCategKeyPressed

    private void jTextFieldTombamentoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldTombamentoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jButtonCadastrar.doClick();
        }
    }//GEN-LAST:event_jTextFieldTombamentoKeyPressed

    private void jTextFieldEspecificacaoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldEspecificacaoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jButtonCadastrar.doClick();
        }
    }//GEN-LAST:event_jTextFieldEspecificacaoKeyPressed

    private void jTextFieldValUnitarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldValUnitarioKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jButtonCadastrar.doClick();
        }
    }//GEN-LAST:event_jTextFieldValUnitarioKeyPressed

    private void jSpinnerReplicarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jSpinnerReplicarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jButtonCadastrar.doClick();
        }
    }//GEN-LAST:event_jSpinnerReplicarKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaNovoEquip.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaNovoEquip.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaNovoEquip.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaNovoEquip.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaNovoEquip().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TabelaFornecedor;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JButton jButtonCadastrar;
    private javax.swing.JButton jButtonVoltar;
    private javax.swing.JComboBox<String> jComboBoxCategoria;
    private javax.swing.JComboBox<String> jComboBoxTomb2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelAjuda;
    private javax.swing.JLabel jLabeltomb1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuConsultarEscolherForn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinnerReplicar;
    private javax.swing.JTextField jTextFieldEspecificacao;
    private javax.swing.JTextField jTextFieldNumSerie;
    private javax.swing.JTextField jTextFieldOutraCateg;
    private javax.swing.JTextField jTextFieldTombamento;
    private javax.swing.JTextField jTextFieldValUnitario;
    private java.awt.TextField textField1;
    // End of variables declaration//GEN-END:variables
}
