/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GuiJP;

import java.math.BigDecimal;
import java.text.NumberFormat;
import java.util.ArrayList;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import ClassesBasicasJP.Equipamentos;
import ClassesBasicasJP.ItensDaNota;
import ClassesBasicasJP.NotaFiscal;
import Geral.Fachada;
import Login.LoginUser;

/**
 *
 * @author joao.paulo
 */
public class TelaNovoItensDaNota extends javax.swing.JFrame {

    /**
     * Creates new form TelaNovoNFeEquip
     */
    public TelaNovoItensDaNota() {
        initComponents();
        setTitle("Itens Da Nota");
        setLocationRelativeTo(null);
    }
    ArrayList<Equipamentos> listaEquip;
    ArrayList<ItensDaNota> listaItens;
    private NotaFiscal nf;
    private ItensDaNota item;

    TelaNovoItensDaNota(NotaFiscal nf, LoginUser logado) {
        initComponents();
        setTitle("Itens Da Nota");
        setLocationRelativeTo(null);
        jLabelCodigo.setText(nf.getCodigo() + "");
        jLabelNotaFiscal.setText(nf.getNotaFiscal() + "");
        jLabelData.setText(nf.getData());
        jLabelFornecedor.setText(nf.getCod_Forn().getNome());
        jLabelValTotal.setText("0");
        this.nf = nf;

        jMenuItemConsultaEquip.doClick(WIDTH);
        //jMenuItemDaNota.doClick(WIDTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TabelaEquipamentos = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TabelaItens = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jButtonInserir = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jButtonRemover = new javax.swing.JButton();
        jButtonIr = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldPesquisa = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabelCodigo = new javax.swing.JLabel();
        jLabelNotaFiscal = new javax.swing.JLabel();
        jLabelData = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabelAjuda = new javax.swing.JLabel();
        jButtonConsultarItem = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabelFornecedor = new javax.swing.JLabel();
        jLabelValTotal = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemConsultaEquip = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        TabelaEquipamentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Código", "Categoria", "Especificação", "Valor Unitário"
            }
        ));
        TabelaEquipamentos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabelaEquipamentosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TabelaEquipamentos);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 0, 51));
        jLabel1.setText("ADICIONANDO ITENS A NOTA");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(204, 0, 51));
        jLabel10.setText("Equipamentos do fornecedor: ");

        TabelaItens.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Código", "Categoria", "Especificação", "Valor Unitário", "Quantidade", "Valor Total Item"
            }
        ));
        TabelaItens.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabelaItensMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TabelaItens);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 0, 51));
        jLabel2.setText("Itens da Nota fiscal");

        jButtonInserir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Icons/add_32.png"))); // NOI18N
        jButtonInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInserirActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 0, 51));
        jLabel4.setText("Valor Total da nota :");

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Icons/arrow_left_32.png"))); // NOI18N
        jButton4.setText("Voltar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 255));
        jLabel11.setText("R$");

        jButtonRemover.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Icons/cross_32.png"))); // NOI18N
        jButtonRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoverActionPerformed(evt);
            }
        });

        jButtonIr.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Icons/run_32.png"))); // NOI18N
        jButtonIr.setText("Ir");
        jButtonIr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIrActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Pesquisar:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Código:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Nota Fiscal:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Data da Nota:");

        jLabelCodigo.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabelCodigo.setForeground(new java.awt.Color(0, 0, 255));
        jLabelCodigo.setText("jLabel8");

        jLabelNotaFiscal.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabelNotaFiscal.setForeground(new java.awt.Color(0, 0, 255));
        jLabelNotaFiscal.setText("jLabel8");

        jLabelData.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabelData.setForeground(new java.awt.Color(0, 0, 255));
        jLabelData.setText("jLabel8");

        jLabel8.setText("Ajuda:");

        jLabelAjuda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Icons/help_32.png"))); // NOI18N
        jLabelAjuda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelAjudaMouseClicked(evt);
            }
        });

        jButtonConsultarItem.setText("Consultar");
        jButtonConsultarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConsultarItemActionPerformed(evt);
            }
        });

        jLabelFornecedor.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabelFornecedor.setForeground(new java.awt.Color(0, 0, 255));
        jLabelFornecedor.setText("jLabel9");

        jLabelValTotal.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelValTotal.setForeground(new java.awt.Color(0, 0, 255));
        jLabelValTotal.setText("0");

        jMenu1.setText("Arquivo");

        jMenuItemConsultaEquip.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItemConsultaEquip.setText("ConsultaEquip");
        jMenuItemConsultaEquip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemConsultaEquipActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemConsultaEquip);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(20, 20, 20)
                                                .addComponent(jLabel6)
                                                .addGap(18, 18, 18)
                                                .addComponent(jTextFieldPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(30, 30, 30)
                                                .addComponent(jButtonIr))
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(17, 17, 17)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jButtonInserir)
                                            .addComponent(jButtonRemover)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabelFornecedor)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 730, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel2)
                                            .addGap(264, 264, 264)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButtonConsultarItem)
                                        .addGap(215, 215, 215)
                                        .addComponent(jLabel4)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabelValTotal)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton4)
                                        .addGap(22, 22, 22))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(419, 419, 419)
                                .addComponent(jLabel3)
                                .addGap(30, 30, 30)
                                .addComponent(jLabelCodigo)
                                .addGap(82, 82, 82)
                                .addComponent(jLabel5)
                                .addGap(30, 30, 30)
                                .addComponent(jLabelNotaFiscal)
                                .addGap(79, 79, 79)
                                .addComponent(jLabel7)
                                .addGap(30, 30, 30)
                                .addComponent(jLabelData)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(0, 6, Short.MAX_VALUE))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(492, 492, 492)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelAjuda)
                        .addGap(8, 8, 8)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel8))
                    .addComponent(jLabelAjuda, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelCodigo)
                    .addComponent(jLabelNotaFiscal)
                    .addComponent(jLabelData)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7))))
                .addGap(1, 1, 1)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jLabelFornecedor))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonIr, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6)
                                            .addComponent(jTextFieldPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(73, 73, 73)
                                .addComponent(jButtonInserir)
                                .addGap(38, 38, 38)
                                .addComponent(jButtonRemover))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(21, 21, 21)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonConsultarItem, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton4)
                                .addComponent(jLabel11)
                                .addComponent(jLabel4)
                                .addComponent(jLabelValTotal))))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInserirActionPerformed
        ItensDaNota item = new ItensDaNota();
        Equipamentos equip = new Equipamentos();

        try {
            if (TabelaEquipamentos.getSelectedRow() >= 0) {
                equip = listaEquip.get(TabelaEquipamentos.getSelectedRow());

                //RECEBENDO CODIGO DO EQUIPAMENTO                
                item.setCod_Equip(equip);

                //RECEBENDO VALOR UNITARIO DO EQUIPAMENTO
                item.setValorUnidade(equip.getValUnitario());

                //RECEBENDO CODIGO DA NOTA FISCAL 
                item.setCod_NF(nf);

                //TRATANDO E PEDINDO AO USUÁRIO QUE INFORME A QUANTIDADE DAQUELE EQUIPAMENTO
                int qtd = Integer.parseInt(JOptionPane.showInputDialog("Informe a quantidade deste equipamento"));
                if (qtd <= 0) {
                    throw new Exception("Informe a Quantidade com números naturais(1,2,3,4...)");
                }

                item.setQuantidade(qtd);

                //VALOR TOTAL ITEM
                String result1 = equip.getValUnitario().substring(0, equip.getValUnitario().length() - 3).replace(".", "");//TIRANDO OS . DO NUMERO E ADICIONANDO A VARIAVEL RESULT1
                String result2 = equip.getValUnitario().substring(equip.getValUnitario().length() - 3).replace(",", ".");//TRANSFORMANDO A , EM . E ADICIONANDO A VARIAVEL RESULT2
                String resultFinal = result1 + result2;//CONCATENANDO AS VARIAVEIS RESULT 1 E 2
                BigDecimal bd = new BigDecimal(resultFinal);//PEGANDO VALOR UNITARIO(O RESULTADO CONCATENADO) DO EQUIP ESCOLHIDO
                BigDecimal bdQtd = new BigDecimal(qtd);//PEGANDO A QUANTIDADE INFORMADA DO EQUIPAMENTO
                BigDecimal resultado = bd.multiply(bdQtd);//MULTIPLICANDO O VALOR UNITARIO  PELA QTD
                NumberFormat numberf = NumberFormat.getNumberInstance();//DECLARANDO UMA VARIAVEL DO TIPO NUMBERFORMAT
                String formatado = numberf.format(resultado);//FORMATANDO O RESULTADO COM .(MILHAR) E ,(DECIMAIS)
                item.setValorTotalItem(formatado);//SETANDO O RESULTADO DA MULTIPLICAÇÃO FORMATADA NA VARIAVEL "VALOR TOTAL ITEM".

                Fachada.getInstancia().CadastrarItensDaNota(item);
                jButtonConsultarItem.doClick(WIDTH);

                //-------------------------VALOR TOTAL NOTA----------------------
                jLabelValTotal.setText("0");
                for (ItensDaNota itens : listaItens) {
                    if (jLabelValTotal.getText().equals("0")) {//SE FOR A PRIMEIRA INSERÇÃO
                        String valor0 = "0";

                        //PEGANDO O VALOR DA TABELA E CONCATENANDO O FORMATADO
                        String val1 = itens.getValorTotalItem().substring(0, itens.getValorTotalItem().length() - 3).replace(".", "");//TIRANDO OS . DO NUMERO E ADICIONANDO A VARIAVEL VAL1
                        String val2 = itens.getValorTotalItem().substring(itens.getValorTotalItem().length() - 3).replace(",", ".");//TRANSFORMANDO A , EM . E ADICIONANDO A VARIAVEL VAL2
                        String valFinal = val1 + val2;//CONCATENANDO AS VARIAVEIS VAL 1 E 2
                        BigDecimal bd1 = new BigDecimal(valFinal);//PEGANDO VALOR TOTAL DO ITEM(O RESULTADO CONCATENADO)
                        BigDecimal bd2 = new BigDecimal(valor0);//PEGANDO O SEGUNDO VALOR

                        //SOMANDO
                        BigDecimal valorFinal = bd1.add(bd2);//SOMANDO O VALOR UNITARIO  PELA QTD
                        NumberFormat numberValorTotal = NumberFormat.getNumberInstance();//DECLARANDO UMA VARIAVEL DO TIPO NUMBERFORMAT
                        String formatadoValorTotal = numberValorTotal.format(valorFinal);//FORMATANDO O RESULTADO COM .(MILHAR) E ,(DECIMAIS)
                        jLabelValTotal.setText(formatadoValorTotal);//SETANDO O RESULTADO DA SOMA FORMATADA NA JLABEL.

                    } else {//SE JA HOUVER + INSERÇÕES PARA ALTERAR O VALOR JA EXISTENTE NA JLABEL

                        String valor0 = jLabelValTotal.getText();//PEGANDO O VALOR EXISTENTE DA JLABEL

                        //PEGANDO O VALOR DA TABELA E CONCATENANDO O FORMATADO
                        String val1 = itens.getValorTotalItem().substring(0, itens.getValorTotalItem().length() - 3).replace(".", "");//TIRANDO OS . DO NUMERO E ADICIONANDO A VARIAVEL VAL1
                        String val2 = itens.getValorTotalItem().substring(itens.getValorTotalItem().length() - 3).replace(",", ".");//TRANSFORMANDO A , EM . E ADICIONANDO A VARIAVEL VAL2
                        String valFinal = val1 + val2;//CONCATENANDO AS VARIAVEIS VAL 1 E 2
                        BigDecimal bd1 = new BigDecimal(valFinal);//PEGANDO VALOR TOTAL DO ITEM(O RESULTADO CONCATENADO)

                        //PEGANDO O VALOR EXISTENTE NO jLABEL E CONCATENANDO O FORMATADO
                        String val3 = valor0.substring(0, itens.getValorTotalItem().length() - 3).replace(".", "");//TIRANDO OS . DO NUMERO E ADICIONANDO A VARIAVEL VAL1
                        String val4 = valor0.substring(itens.getValorTotalItem().length() - 3).replace(",", ".");//TRANSFORMANDO A , EM . E ADICIONANDO A VARIAVEL VAL2
                        String valorFinal2 = val3 + val4;//CONCATENANDO AS VARIAVEIS VAL 3 E 4
                        BigDecimal bd2 = new BigDecimal(valorFinal2);//PEGANDO O SEGUNDO VALOR

                        //SOMANDO
                        BigDecimal valorFinal = bd1.add(bd2);//SOMANDO O VALOR UNITARIO  PELA QTD
                        NumberFormat numberValorTotal = NumberFormat.getNumberInstance();//DECLARANDO UMA VARIAVEL DO TIPO NUMBERFORMAT
                        String formatadoValorTotal = numberValorTotal.format(valorFinal);//FORMATANDO O RESULTADO COM .(MILHAR) E ,(DECIMAIS)
                        jLabelValTotal.setText(formatadoValorTotal);//SETANDO O RESULTADO DA SOMA FORMATADA NA JLABEL.

                    }
                }

                JOptionPane.showMessageDialog(rootPane, "Item adicionado a nota com sucesso.");
                TabelaEquipamentos.clearSelection();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, " Erro: " + e.getMessage());
        }

    }//GEN-LAST:event_jButtonInserirActionPerformed

    private void jMenuItemConsultaEquipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemConsultaEquipActionPerformed
        try {

            String cnpj = nf.getCod_Forn().getCnpj();
            listaEquip = Fachada.getInstancia().listaEquip(cnpj);

            DefaultTableModel tabelaEquip = new DefaultTableModel() {
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            ;

            };
        
        
        tabelaEquip.setColumnIdentifiers(new String[]{"Código", "Categoria", "Especificação", "Valor Unitário"});
            for (Equipamentos equip : listaEquip) {
                tabelaEquip.addRow(new String[]{equip.getCodigo() + "", equip.getCategoria(), equip.getEspecificacao(), equip.getValUnitario()});

                TabelaEquipamentos.setModel(tabelaEquip);
                TabelaEquipamentos.getColumnModel().getColumn(0).setMaxWidth(50);
                TabelaEquipamentos.getColumnModel().getColumn(1).setMaxWidth(130);
                TabelaEquipamentos.getColumnModel().getColumn(2).setMaxWidth(260);
                TabelaEquipamentos.getColumnModel().getColumn(3).setMaxWidth(100);

            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro: " + ex.getMessage());
        }
    }//GEN-LAST:event_jMenuItemConsultaEquipActionPerformed

    private void jButtonIrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIrActionPerformed
        try {
            String filtroEquips = jTextFieldPesquisa.getText().trim();
            listaEquip = Fachada.getInstancia().listaFiltroEquip(filtroEquips);
            DefaultTableModel tabelaEquip = new DefaultTableModel() {
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            ;

            };
            tabelaEquip.setColumnIdentifiers(new String[]{"Código", "Categoria", "Especificação", "Valor Unitário"});
            for (Equipamentos equip : listaEquip) {
                tabelaEquip.addRow(new String[]{equip.getCodigo() + "", equip.getCategoria(), equip.getEspecificacao(), equip.getValUnitario()});

                TabelaEquipamentos.setModel(tabelaEquip);
                TabelaEquipamentos.getColumnModel().getColumn(0).setMaxWidth(50);
                TabelaEquipamentos.getColumnModel().getColumn(1).setMaxWidth(130);
                TabelaEquipamentos.getColumnModel().getColumn(2).setMaxWidth(260);
                TabelaEquipamentos.getColumnModel().getColumn(3).setMaxWidth(150);

            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro: " + ex.getMessage());
        }
    }//GEN-LAST:event_jButtonIrActionPerformed

    private void jButtonRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoverActionPerformed
        try {
            if (TabelaItens.getSelectedRow() >= 0) {
                ItensDaNota remoItens;
                remoItens = listaItens.get(TabelaItens.getSelectedRow());
                if (JOptionPane.showConfirmDialog(new JFrame(),
                        "Tem certeza que deseja remover o(a) (" + remoItens.getCod_Equip().getCategoria() + ") da Nota? (Esta ação não poderá ser desfeita)",
                        "Remover este Equipamento", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {

                    // int selectRow = (TabelaEquipamentos.getSelectedRow());
                    Fachada.getInstancia().RemoverItensDaNota(remoItens);
                    JOptionPane.showMessageDialog(rootPane, remoItens.getCod_Equip().getCategoria() + " foi removido com sucesso");

                    //------------------LISTANDO APÓS REMOVER O ITEM
                    int nf = Integer.parseInt(jLabelCodigo.getText());
                    listaItens = Fachada.getInstancia().listaItensDaNota(nf);

                    DefaultTableModel tabelaItensDaNota = new DefaultTableModel() {
                        public boolean isCellEditable(int row, int column) {
                            return false;
                        }
                    ;

                    };
                    //-----------APAGANDO ULTIMA LINHA
                    for (int i = TabelaItens.getRowCount() - 1; i <= 0; ++i) {
                        ((DefaultTableModel) TabelaItens.getModel()).removeRow(i);
                    }
                    //------
                    tabelaItensDaNota.setColumnIdentifiers(new String[]{"Código", "Categoria", "Especificação", "Valor Unitário", "Quantidade", "Valor Total Item"});
                    for (ItensDaNota itens : listaItens) {
                        tabelaItensDaNota.addRow(new String[]{itens.getCodigo() + "", itens.getCod_Equip().getCategoria(), itens.getCod_Equip().getEspecificacao(), itens.getValorUnidade(), itens.getQuantidade() + "", itens.getValorTotalItem() + ""});

                        TabelaItens.setModel(tabelaItensDaNota);
                        TabelaItens.getColumnModel().getColumn(0).setMaxWidth(50);
                        TabelaItens.getColumnModel().getColumn(1).setMaxWidth(130);
                        TabelaItens.getColumnModel().getColumn(2).setMaxWidth(260);
                        TabelaItens.getColumnModel().getColumn(3).setMaxWidth(100);
                        TabelaItens.getColumnModel().getColumn(4).setMaxWidth(100);
                        TabelaItens.getColumnModel().getColumn(5).setMaxWidth(150);

                    }
                    //-------------------------VALOR TOTAL NOTA----------------------
                    jLabelValTotal.setText("0");
                    for (ItensDaNota itens : listaItens) {
                        if (jLabelValTotal.getText().equals("0")) {//SE FOR A PRIMEIRA INSERÇÃO
                            String valor0 = "0";

                            //PEGANDO O VALOR DA TABELA E CONCATENANDO O FORMATADO
                            String val1 = itens.getValorTotalItem().substring(0, itens.getValorTotalItem().length() - 3).replace(".", "");//TIRANDO OS . DO NUMERO E ADICIONANDO A VARIAVEL VAL1
                            String val2 = itens.getValorTotalItem().substring(itens.getValorTotalItem().length() - 3).replace(",", ".");//TRANSFORMANDO A , EM . E ADICIONANDO A VARIAVEL VAL2
                            String valFinal = val1 + val2;//CONCATENANDO AS VARIAVEIS VAL 1 E 2
                            BigDecimal bd1 = new BigDecimal(valFinal);//PEGANDO VALOR TOTAL DO ITEM(O RESULTADO CONCATENADO)
                            BigDecimal bd2 = new BigDecimal(valor0);//PEGANDO O SEGUNDO VALOR

                            //SOMANDO
                            BigDecimal valorFinal = bd1.add(bd2);//SOMANDO O VALOR UNITARIO  PELA QTD
                            NumberFormat numberValorTotal = NumberFormat.getNumberInstance();//DECLARANDO UMA VARIAVEL DO TIPO NUMBERFORMAT
                            String formatadoValorTotal = numberValorTotal.format(valorFinal);//FORMATANDO O RESULTADO COM .(MILHAR) E ,(DECIMAIS)
                            jLabelValTotal.setText(formatadoValorTotal);//SETANDO O RESULTADO DA SOMA FORMATADA NA JLABEL.

                        } else {//SE JA HOUVER + INSERÇÕES PARA ALTERAR O VALOR JA EXISTENTE NA JLABEL

                            String valor0 = jLabelValTotal.getText();//PEGANDO O VALOR EXISTENTE DA JLABEL

                            //PEGANDO O VALOR DA TABELA E CONCATENANDO O FORMATADO
                            String val1 = itens.getValorTotalItem().substring(0, itens.getValorTotalItem().length() - 3).replace(".", "");//TIRANDO OS . DO NUMERO E ADICIONANDO A VARIAVEL VAL1
                            String val2 = itens.getValorTotalItem().substring(itens.getValorTotalItem().length() - 3).replace(",", ".");//TRANSFORMANDO A , EM . E ADICIONANDO A VARIAVEL VAL2
                            String valFinal = val1 + val2;//CONCATENANDO AS VARIAVEIS VAL 1 E 2
                            BigDecimal bd1 = new BigDecimal(valFinal);//PEGANDO VALOR TOTAL DO ITEM(O RESULTADO CONCATENADO)

                            //PEGANDO O VALOR EXISTENTE NO jLABEL E CONCATENANDO O FORMATADO
                            String val3 = valor0.substring(0, itens.getValorTotalItem().length() - 3).replace(".", "");//TIRANDO OS . DO NUMERO E ADICIONANDO A VARIAVEL VAL1
                            String val4 = valor0.substring(itens.getValorTotalItem().length() - 3).replace(",", ".");//TRANSFORMANDO A , EM . E ADICIONANDO A VARIAVEL VAL2
                            String valorFinal2 = val3 + val4;//CONCATENANDO AS VARIAVEIS VAL 3 E 4
                            BigDecimal bd2 = new BigDecimal(valorFinal2);//PEGANDO O SEGUNDO VALOR

                            //SOMANDO
                            BigDecimal valorFinal = bd1.add(bd2);//SOMANDO O VALOR UNITARIO  PELA QTD
                            NumberFormat numberValorTotal = NumberFormat.getNumberInstance();//DECLARANDO UMA VARIAVEL DO TIPO NUMBERFORMAT
                            String formatadoValorTotal = numberValorTotal.format(valorFinal);//FORMATANDO O RESULTADO COM .(MILHAR) E ,(DECIMAIS)
                            jLabelValTotal.setText(formatadoValorTotal);//SETANDO O RESULTADO DA SOMA FORMATADA NA JLABEL.

                        }
                    }

                } else {
                    JOptionPane.showMessageDialog(rootPane, "Operação cancelada.");
                }

            } else {
                JOptionPane.showMessageDialog(rootPane, "Selecione na tabela um Equipamento para ser removido");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }

    }//GEN-LAST:event_jButtonRemoverActionPerformed

    private void jLabelAjudaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelAjudaMouseClicked
        JOptionPane.showMessageDialog(rootPane, "Para adicionar itens a nota você deve:\n"
                + "- Selecionar o equipamento da Tabela Equipamento e clicar no botão com sinal = +; \n"
                + "- Informar a quantidade deste equipamento nesta nota;\n"
                + "- Repetindo o passo a passo acima até concluir os itens que devem pertencer a nota;\n"
                + "- Clicar no botão confirmar."
                + "\n"
                + "\n"
                + "OBS: ao filtrar para que a lista de equipamentos volte ao normal, use a tecla de atalho CTRL+E"
                + "\n"
                + "\n"
                + "Para remover os itens da nota você deve:\n"
                + "- Selecionar o item da Tabela Itens Da Nota e clicar no botão com o sinal = x.");
    }//GEN-LAST:event_jLabelAjudaMouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        TelaConsultaNF tela = new TelaConsultaNF();
        tela.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButtonConsultarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConsultarItemActionPerformed
        try {
            int nf = Integer.parseInt(jLabelCodigo.getText());
            listaItens = Fachada.getInstancia().listaItensDaNota(nf);

            DefaultTableModel tabelaItensDaNota = new DefaultTableModel() {
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            ;

            };
        
         tabelaItensDaNota.setColumnIdentifiers(new String[]{"Código", "Categoria", "Especificação", "Valor Unitário", "Quantidade", "Valor Total Item"});
            for (ItensDaNota itens : listaItens) {
                tabelaItensDaNota.addRow(new String[]{itens.getCodigo() + "", itens.getCod_Equip().getCategoria(), itens.getCod_Equip().getEspecificacao(), itens.getValorUnidade(), itens.getQuantidade() + "", itens.getValorTotalItem() + ""});

                TabelaItens.setModel(tabelaItensDaNota);
                TabelaItens.getColumnModel().getColumn(0).setMaxWidth(50);
                TabelaItens.getColumnModel().getColumn(1).setMaxWidth(130);
                TabelaItens.getColumnModel().getColumn(2).setMaxWidth(260);
                TabelaItens.getColumnModel().getColumn(3).setMaxWidth(100);
                TabelaItens.getColumnModel().getColumn(4).setMaxWidth(100);
                TabelaItens.getColumnModel().getColumn(5).setMaxWidth(150);

            }
            if (tabelaItensDaNota.getRowCount() == 0) {
                tabelaItensDaNota.removeRow(nf);
            }

             //-------------------------VALOR TOTAL NOTA----------------------
             jLabelValTotal.setText("0");
             for (ItensDaNota itens : listaItens) {
             if(jLabelValTotal.getText().equals("0")){//SE FOR A PRIMEIRA INSERÇÃO
             String valor0 = "0";
                
             //PEGANDO O VALOR DA TABELA E CONCATENANDO O FORMATADO
             String val1 = itens.getValorTotalItem().substring(0, itens.getValorTotalItem().length() - 3).replace(".", "");//TIRANDO OS . DO NUMERO E ADICIONANDO A VARIAVEL VAL1
             String val2 = itens.getValorTotalItem().substring(itens.getValorTotalItem().length() - 3).replace(",", ".");//TRANSFORMANDO A , EM . E ADICIONANDO A VARIAVEL VAL2
             String valFinal = val1 + val2;//CONCATENANDO AS VARIAVEIS VAL 1 E 2
             BigDecimal bd1 = new BigDecimal(valFinal);//PEGANDO VALOR TOTAL DO ITEM(O RESULTADO CONCATENADO)
             BigDecimal bd2 = new BigDecimal(valor0);//PEGANDO O SEGUNDO VALOR

             //SOMANDO
             BigDecimal valorFinal = bd1.add(bd2);//SOMANDO O VALOR UNITARIO  PELA QTD
             NumberFormat numberValorTotal = NumberFormat.getNumberInstance();//DECLARANDO UMA VARIAVEL DO TIPO NUMBERFORMAT
             String formatadoValorTotal = numberValorTotal .format(valorFinal);//FORMATANDO O RESULTADO COM .(MILHAR) E ,(DECIMAIS)
             jLabelValTotal.setText(formatadoValorTotal);//SETANDO O RESULTADO DA SOMA FORMATADA NA JLABEL.
                
                
                
                
             }else{//SE JA HOUVER + INSERÇÕES PARA ALTERAR O VALOR JA EXISTENTE NA JLABEL

             String valor0 = jLabelValTotal.getText();//PEGANDO O VALOR EXISTENTE DA JLABEL
                
             //PEGANDO O VALOR DA TABELA E CONCATENANDO O FORMATADO
             String val1 = itens.getValorTotalItem().substring(0, itens.getValorTotalItem().length() - 3).replace(".", "");//TIRANDO OS . DO NUMERO E ADICIONANDO A VARIAVEL VAL1
             String val2 = itens.getValorTotalItem().substring(itens.getValorTotalItem().length() - 3).replace(",", ".");//TRANSFORMANDO A , EM . E ADICIONANDO A VARIAVEL VAL2
             String valFinal = val1 + val2;//CONCATENANDO AS VARIAVEIS VAL 1 E 2
             BigDecimal bd1 = new BigDecimal(valFinal);//PEGANDO VALOR TOTAL DO ITEM(O RESULTADO CONCATENADO)
                
             //PEGANDO O VALOR EXISTENTE NO jLABEL E CONCATENANDO O FORMATADO
             String val3 = valor0.substring(0, itens.getValorTotalItem().length() - 3).replace(".", "");//TIRANDO OS . DO NUMERO E ADICIONANDO A VARIAVEL VAL1
             String val4 = valor0.substring(itens.getValorTotalItem().length() - 3).replace(",", ".");//TRANSFORMANDO A , EM . E ADICIONANDO A VARIAVEL VAL2
             String valorFinal2 = val3 + val4;//CONCATENANDO AS VARIAVEIS VAL 3 E 4
             BigDecimal bd2 = new BigDecimal(valorFinal2);//PEGANDO O SEGUNDO VALOR
                
             //SOMANDO
             BigDecimal valorFinal = bd1.add(bd2);//SOMANDO O VALOR UNITARIO  PELA QTD
             NumberFormat numberValorTotal = NumberFormat.getNumberInstance();//DECLARANDO UMA VARIAVEL DO TIPO NUMBERFORMAT
             String formatadoValorTotal = numberValorTotal .format(valorFinal);//FORMATANDO O RESULTADO COM .(MILHAR) E ,(DECIMAIS)
             jLabelValTotal.setText(formatadoValorTotal);//SETANDO O RESULTADO DA SOMA FORMATADA NA JLABEL.
                    
             }
             }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro - " + ex.getMessage());
        }
    }//GEN-LAST:event_jButtonConsultarItemActionPerformed

    private void TabelaEquipamentosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabelaEquipamentosMouseClicked
        if (TabelaEquipamentos.getSelectedRow() >= 0) {
            Equipamentos selecionado;
            selecionado = listaEquip.get(TabelaEquipamentos.getSelectedRow());
            if (evt.getClickCount() > 1) {
                jButtonInserir.doClick(WIDTH);

            }
        }
    }//GEN-LAST:event_TabelaEquipamentosMouseClicked

    private void TabelaItensMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabelaItensMouseClicked
        if (TabelaEquipamentos.getSelectedRow() >= 0) {
            Equipamentos selecionado;
            selecionado = listaEquip.get(TabelaEquipamentos.getSelectedRow());
            if (evt.getClickCount() > 1) {
                jButtonRemover.doClick(WIDTH);
            }
        }
    }//GEN-LAST:event_TabelaItensMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaNovoItensDaNota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaNovoItensDaNota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaNovoItensDaNota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaNovoItensDaNota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaNovoItensDaNota().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TabelaEquipamentos;
    private javax.swing.JTable TabelaItens;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButtonConsultarItem;
    private javax.swing.JButton jButtonInserir;
    private javax.swing.JButton jButtonIr;
    private javax.swing.JButton jButtonRemover;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelAjuda;
    private javax.swing.JLabel jLabelCodigo;
    private javax.swing.JLabel jLabelData;
    private javax.swing.JLabel jLabelFornecedor;
    private javax.swing.JLabel jLabelNotaFiscal;
    private javax.swing.JLabel jLabelValTotal;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItemConsultaEquip;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextFieldPesquisa;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the item
     */
    public ItensDaNota getItem() {
        return item;
    }

    /**
     * @param item the item to set
     */
    public void setItem(ItensDaNota item) {
        this.item = item;
    }
}
