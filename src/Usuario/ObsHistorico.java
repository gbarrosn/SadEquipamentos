/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Usuario;


import Geral.Fachada;
import Login.LoginUser;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author airton.oliveira
 */
public class ObsHistorico extends javax.swing.JFrame {

    /**
     * Creates new form HistoricoObs
     */
    public ObsHistorico() {
        initComponents();
        setTitle("Histórico do Microcomputador");
        setLocationRelativeTo(null); 
        
    }
    
     void icone() {
        BufferedImage img = null;
        try {
            img = ImageIO.read(new File("src\\resources\\favicon-cor.png"));
            this.setIconImage(img);
        } catch (IOException e) {
        }
    }
    
    private Usuario user;
    private LoginUser logado;
    
    public ObsHistorico(Usuario user){
        icone();
     initComponents();   
     setTitle("Histórico do Microcomputador");
     setLocationRelativeTo(null); 
     
     this.user=user;
     
     textoUsuarioAtual.setText("Usuário atual: "+this.user.getNome());
     textoTombo.setText("Tombo: "+this.user.getTombamentoMicro());
     textoHost.setText("Host Name: "+this.user.getNomepc());
     textoPavimento.setText("Pavimento: "+this.user.getPavimentoUsuario().getPavimento());
     textoNotebook.setText("Notebook: "+this.user.getNotebook());
     
     ButtonListar.doClick();
     campoListar.setToolTipText("O filtro irá pesquisar em todos os campos.");
    }
    
     public ObsHistorico(Usuario user,LoginUser logado){
     initComponents();   
     setTitle("Histórico do Microcomputador");
     setLocationRelativeTo(null); 
     
     this.user=user;
     this.logado=logado;
     textoUsuarioAtual.setText("Usuário atual: "+this.user.getNome());
     textoTombo.setText("Tombo: "+this.user.getTombamentoMicro());
     textoHost.setText("Host Name: "+this.user.getNomepc());
     textoPavimento.setText("Pavimento: "+this.user.getPavimentoUsuario().getPavimento());
     textoNotebook.setText("Notebook: "+this.user.getNotebook());
     
     ButtonListar.doClick();
     campoListar.setToolTipText("O filtro irá pesquisar em todos os campos.");
    }

      ArrayList<Obs> listaObs;
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ListaDB = new javax.swing.JTable();
        ButtonAlterar = new javax.swing.JButton();
        ButtonRemover = new javax.swing.JButton();
        ButtonSair = new javax.swing.JButton();
        ButtonNovaObservacao = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        campoListar = new javax.swing.JTextField();
        ButtonListar = new javax.swing.JButton();
        textoTombo = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        textoUsuarioAtual = new javax.swing.JLabel();
        textoHost = new javax.swing.JLabel();
        textoPavimento = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        textoNotebook = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        ListaDB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Data", "Observação", "Adicionado por"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(ListaDB);
        if (ListaDB.getColumnModel().getColumnCount() > 0) {
            ListaDB.getColumnModel().getColumn(0).setResizable(false);
            ListaDB.getColumnModel().getColumn(2).setResizable(false);
        }

        ButtonAlterar.setText("Alterar");
        ButtonAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAlterarActionPerformed(evt);
            }
        });

        ButtonRemover.setText("Remover");
        ButtonRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonRemoverActionPerformed(evt);
            }
        });

        ButtonSair.setText("Voltar");
        ButtonSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonSairActionPerformed(evt);
            }
        });

        ButtonNovaObservacao.setText("Nova Observação");
        ButtonNovaObservacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonNovaObservacaoActionPerformed(evt);
            }
        });

        jLabel1.setText("Filtro:");

        ButtonListar.setText("Listar");
        ButtonListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonListarActionPerformed(evt);
            }
        });

        textoTombo.setText("Tombamento do Computador:");

        textoUsuarioAtual.setText("Usuário atual:");

        textoHost.setText("Host Name:");

        textoPavimento.setText("Pavimento:");

        jButton1.setText("Visualizar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        textoNotebook.setText("Notebook:");

        jMenu1.setText("Arquivo");

        jMenuItem2.setText("Voltar");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem1.setText("Sair do Sistema");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 974, Short.MAX_VALUE)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ButtonAlterar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ButtonRemover)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ButtonNovaObservacao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ButtonSair))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textoUsuarioAtual)
                            .addComponent(textoTombo)
                            .addComponent(textoHost)
                            .addComponent(textoPavimento)
                            .addComponent(textoNotebook)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(campoListar)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ButtonListar, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textoUsuarioAtual)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textoTombo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textoHost)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textoPavimento)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textoNotebook)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoListar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonListar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ButtonAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ButtonRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ButtonNovaObservacao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ButtonSair, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ButtonNovaObservacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonNovaObservacaoActionPerformed
        ObsInformar exibirInformarObs = new ObsInformar(user,this.logado);
        exibirInformarObs.setVisible(true);
    }//GEN-LAST:event_ButtonNovaObservacaoActionPerformed

    private void ButtonListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonListarActionPerformed
     
      try {
            
            Obs filtroObs = new Obs();
            filtroObs.setUsuario_obs(user);
            
            String filtroGeral;
            if(campoListar.getText().trim().equals("")==false){
            filtroGeral=(campoListar.getText());
            }else{
                filtroGeral="";
            }
              
            filtroObs.setObs(filtroGeral);
            filtroObs.setData_obs(filtroGeral);
            filtroObs.setNome_usuario(filtroGeral);
            
            
            listaObs = Fachada.getInstancia().listarObs(filtroObs);
            
            DefaultTableModel tabela = new DefaultTableModel();
            tabela.setColumnIdentifiers(new String [] {"Data","Observação","Adicionado por"});         
            
            for (Obs este: listaObs){
                tabela.addRow(new String [] { este.getData_obs(),este.getObs(),este.getNome_usuario()});
            }                 
            
            ListaDB.setModel(tabela);  
            
            ListaDB.getColumnModel().getColumn(0).setMinWidth(100);
            ListaDB.getColumnModel().getColumn(0).setMaxWidth(100);
            ListaDB.getColumnModel().getColumn(2).setMinWidth(130);
            ListaDB.getColumnModel().getColumn(2).setMaxWidth(130);
           
        } catch (Exception e) {

            JOptionPane.showMessageDialog(null, "Erro ao exibir histórico."+e.getMessage());
        }   
        
    }//GEN-LAST:event_ButtonListarActionPerformed

    private void ButtonSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonSairActionPerformed
        dispose();
    }//GEN-LAST:event_ButtonSairActionPerformed

    private void ButtonRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonRemoverActionPerformed
          
        
        if(ListaDB.getSelectedRow()>=0){
        Obs removerObs = new Obs();
        removerObs=listaObs.get(ListaDB.getSelectedRow());
        
        if ( JOptionPane.showConfirmDialog(new JFrame(), 
       "Tem certeza que deseja remover esta observação?", 
       "Remover Observação", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) { 
          try {
   
    int selectedrow=(ListaDB.getSelectedRow());
    Fachada.getInstancia().removerObservacao(removerObs);
    
        JOptionPane.showMessageDialog(null,"Observação removida com sucesso!");
        
        
    listaObs.remove(selectedrow);
    
     DefaultTableModel tabela = new DefaultTableModel();
            tabela.setColumnIdentifiers(new String [] {"Data","Observação","Adicionado por"});         
            
            for (Obs este: listaObs){
                tabela.addRow(new String [] { este.getData_obs(),este.getObs(),este.getNome_usuario()});
            }                 
            
            ListaDB.setModel(tabela);  
            
            ListaDB.getColumnModel().getColumn(0).setMinWidth(100);
            ListaDB.getColumnModel().getColumn(0).setMaxWidth(100);
            ListaDB.getColumnModel().getColumn(2).setMinWidth(130);
            ListaDB.getColumnModel().getColumn(2).setMaxWidth(130);
                          
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
      } 
      else { 
            
          JOptionPane.showMessageDialog(rootPane,"Operação cancelada.");   
          return; 
      } 
        }else{
       
                JOptionPane.showMessageDialog(rootPane,"Escolha alguma observação da lista para removê-la.");
            }
    }//GEN-LAST:event_ButtonRemoverActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
    dispose();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
   System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void ButtonAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAlterarActionPerformed
  if (ListaDB.getSelectedRow() >= 0){
            Obs selecionadoObs = new Obs();
            selecionadoObs =  listaObs.get(ListaDB.getSelectedRow());
            
            ObsAlterar alterarInformarObs = new ObsAlterar(selecionadoObs,this.logado);
            alterarInformarObs.setVisible(true);
            

        }else{
            JOptionPane.showMessageDialog(null, "Escolha alguma observação da lista para alterá-la!");
        };

    }//GEN-LAST:event_ButtonAlterarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    if (ListaDB.getSelectedRow() >= 0){
            Obs selecionadoObs = new Obs();
            selecionadoObs =  listaObs.get(ListaDB.getSelectedRow());
            
            ObsVisualizar visualizarObs = new ObsVisualizar(selecionadoObs,this.logado);
            visualizarObs.setVisible(true);
            

        }else{
            JOptionPane.showMessageDialog(null, "Escolha alguma observação da lista para visualizá-la!");
        };
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ObsHistorico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ObsHistorico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ObsHistorico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ObsHistorico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ObsHistorico().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonAlterar;
    private javax.swing.JButton ButtonListar;
    private javax.swing.JButton ButtonNovaObservacao;
    private javax.swing.JButton ButtonRemover;
    private javax.swing.JButton ButtonSair;
    private javax.swing.JTable ListaDB;
    private javax.swing.JTextField campoListar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel textoHost;
    private javax.swing.JLabel textoNotebook;
    private javax.swing.JLabel textoPavimento;
    private javax.swing.JLabel textoTombo;
    private javax.swing.JLabel textoUsuarioAtual;
    // End of variables declaration//GEN-END:variables
}
