/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Usuario;

import Geral.Fachada;
import Login.LoginUser;
import Principal.TelaPrincipal;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author airton.oliveira
 */
public class ObsGeral extends javax.swing.JFrame {

    /**
     * Creates new form ObsGeral
     */
    public ObsGeral() {
        initComponents();
        setTitle("Histórico de observações");
        setLocationRelativeTo(null);
        //ButtonListar.doClick();
    }

    void icone() {
        BufferedImage img = null;
        try {
            img = ImageIO.read(new File("src\\resources\\favicon-cor.png"));
            this.setIconImage(img);
        } catch (IOException e) {
        }
    }

    private LoginUser logado;

    public ObsGeral(LoginUser logado) {
        icone();
        initComponents();
        setTitle("Histórico de observações");
        setLocationRelativeTo(null);
        //ButtonListar.doClick();
        this.logado = logado;
    }

    ArrayList<Obs> listaObs;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        campoListar = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        textoTotal = new javax.swing.JLabel();
        ButtonAlterar = new javax.swing.JButton();
        ButtonRemover = new javax.swing.JButton();
        ButtonVisualizar = new javax.swing.JButton();
        ButtonSair = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListaDB = new javax.swing.JTable();
        ButtonListar = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Filtro de pesquisa");

        textoTotal.setText("Total:");

        ButtonAlterar.setText("Alterar");
        ButtonAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAlterarActionPerformed(evt);
            }
        });

        ButtonRemover.setText("Remover");
        ButtonRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonRemoverActionPerformed(evt);
            }
        });

        ButtonVisualizar.setText("Visualizar");
        ButtonVisualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonVisualizarActionPerformed(evt);
            }
        });

        ButtonSair.setText("Voltar");
        ButtonSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonSairActionPerformed(evt);
            }
        });

        ListaDB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Data", "Observação", "Adicionado por"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(ListaDB);

        ButtonListar.setText("Listar");
        ButtonListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonListarActionPerformed(evt);
            }
        });

        jMenu1.setText("Arquivo");
        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ButtonAlterar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ButtonRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ButtonVisualizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ButtonSair))
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(textoTotal)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(campoListar, javax.swing.GroupLayout.PREFERRED_SIZE, 677, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ButtonListar, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 8, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(campoListar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonListar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textoTotal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ButtonAlterar, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(ButtonRemover, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ButtonVisualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ButtonSair, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ButtonAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAlterarActionPerformed
        if (ListaDB.getSelectedRow() >= 0) {
            Obs selecionadoObs = new Obs();
            selecionadoObs = listaObs.get(ListaDB.getSelectedRow());

            ObsAlterar alterarInformarObs = new ObsAlterar(selecionadoObs, this.logado);
            alterarInformarObs.setVisible(true);

        } else {
            JOptionPane.showMessageDialog(null, "Escolha alguma observação da lista para alterá-la!");
        };
    }//GEN-LAST:event_ButtonAlterarActionPerformed

    private void ButtonRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonRemoverActionPerformed

        if (ListaDB.getSelectedRow() >= 0) {
            Obs removerObs = new Obs();
            removerObs = listaObs.get(ListaDB.getSelectedRow());

            if (JOptionPane.showConfirmDialog(new JFrame(),
                    "Tem certeza que deseja remover esta observação?",
                    "Remover Observação", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                try {

                    int selectedrow = (ListaDB.getSelectedRow());
                    Fachada.getInstancia().removerObservacao(removerObs);

                    JOptionPane.showMessageDialog(null, "Observação removida com sucesso!");

                    listaObs.remove(selectedrow);

                    DefaultTableModel tabela = new DefaultTableModel();
                    tabela.setColumnIdentifiers(new String[]{"Data", "Observação", "Adicionado por"});

                    for (Obs este : listaObs) {
                        tabela.addRow(new String[]{este.getData_obs(), este.getObs(), este.getNome_usuario()});
                    }

                    ListaDB.setModel(tabela);

                    ListaDB.getColumnModel().getColumn(0).setMinWidth(100);
                    ListaDB.getColumnModel().getColumn(0).setMaxWidth(100);
                    ListaDB.getColumnModel().getColumn(2).setMinWidth(130);
                    ListaDB.getColumnModel().getColumn(2).setMaxWidth(130);

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }
            } else {

                JOptionPane.showMessageDialog(rootPane, "Operação cancelada.");
                return;
            }
        } else {

            JOptionPane.showMessageDialog(rootPane, "Escolha alguma observação da lista para removê-la.");
        }
    }//GEN-LAST:event_ButtonRemoverActionPerformed

    private void ButtonVisualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonVisualizarActionPerformed
        if (ListaDB.getSelectedRow() >= 0) {
            Obs selecionadoObs = new Obs();
            selecionadoObs = listaObs.get(ListaDB.getSelectedRow());

            ObsVisualizar visualizarObs = new ObsVisualizar(selecionadoObs, this.logado);
            visualizarObs.setVisible(true);

        } else {
            JOptionPane.showMessageDialog(null, "Escolha alguma observação da lista para visualizá-la!");
        };
    }//GEN-LAST:event_ButtonVisualizarActionPerformed

    private void ButtonSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonSairActionPerformed
        TelaPrincipal tela = new TelaPrincipal(this.logado);
        tela.setVisible(true);
        dispose();
    }//GEN-LAST:event_ButtonSairActionPerformed

    private void ButtonListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonListarActionPerformed

        try {

            Obs filtroObs = new Obs();
            Usuario user = new Usuario();
            //user.setId_usuario(0);
            filtroObs.setUsuario_obs(user);

            String filtroGeral;
            if (campoListar.getText().trim().equals("") == false) {
                filtroGeral = (campoListar.getText());
            } else {
                filtroGeral = "";
            }

            filtroObs.setObs(filtroGeral);
            filtroObs.setData_obs(filtroGeral);
            filtroObs.setNome_usuario(filtroGeral);

            listaObs = Fachada.getInstancia().listarObs(filtroObs);

            DefaultTableModel tabela = new DefaultTableModel();
            tabela.setColumnIdentifiers(new String[]{"Data", "Observação", "Adicionado por"});

            for (Obs este : listaObs) {
                tabela.addRow(new String[]{este.getData_obs(), este.getObs(), este.getNome_usuario()});
            }

            ListaDB.setModel(tabela);

            ListaDB.getColumnModel().getColumn(0).setMinWidth(100);
            ListaDB.getColumnModel().getColumn(0).setMaxWidth(100);
            ListaDB.getColumnModel().getColumn(2).setMinWidth(130);
            ListaDB.getColumnModel().getColumn(2).setMaxWidth(130);

            textoTotal.setText("Total: " + listaObs.size());
        } catch (Exception e) {

            JOptionPane.showMessageDialog(null, "Erro ao exibir histórico." + e.getMessage());
        }

    }//GEN-LAST:event_ButtonListarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ObsGeral.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ObsGeral.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ObsGeral.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ObsGeral.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ObsGeral().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonAlterar;
    private javax.swing.JButton ButtonListar;
    private javax.swing.JButton ButtonRemover;
    private javax.swing.JButton ButtonSair;
    private javax.swing.JButton ButtonVisualizar;
    private javax.swing.JTable ListaDB;
    private javax.swing.JTextField campoListar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel textoTotal;
    // End of variables declaration//GEN-END:variables
}
