/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Micro.ModeloMicro;

import Geral.Fachada;
import Login.LoginUser;
import Micro.MarcaMicro.MarcaMicro;
import Principal.TelaPrincipal;

import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Posseidon
 */
public class ListarModeloMicro extends javax.swing.JFrame {

    /**
     * Creates new form ListarConfig
     */
    public ListarModeloMicro() {
        initComponents();
        setTitle("Listagem de Modelo de Microcomputadores");
        setLocationRelativeTo(null);
        listarMarcas();
        jButtonListar.doClick();

    }

    private LoginUser logado;

    public ListarModeloMicro(LoginUser logado) {
        initComponents();
        setTitle("Listagem de Modelo de Microcomputadores");
        setLocationRelativeTo(null);
        listarMarcas();
        this.logado = logado;
        jButtonListar.doClick();

    }

    ArrayList<MarcaMicro> allMarcasMicros;

    void listarMarcas() {
        try {

            //*********************** ComboBox MarcaMicro:
            try {
                MarcaMicro comboMarcaMicro = new MarcaMicro();

                comboMarcaMicro.setMarca("");

                allMarcasMicros = Fachada.getInstancia().listarMarcaMicro(comboMarcaMicro);

                DefaultComboBoxModel listaComboMarcasMicros = new DefaultComboBoxModel();

                listaComboMarcasMicros.addElement("Marca do Micro");

                for (int i = 0; i < allMarcasMicros.size(); i++) {
                    MarcaMicro nomeComboMarcaMicro = new MarcaMicro();
                    nomeComboMarcaMicro = allMarcasMicros.get(i);
                    listaComboMarcasMicros.addElement(nomeComboMarcaMicro.getMarca());
                }
                Box_MarcaMicro.setModel(listaComboMarcasMicros);

            } catch (Exception e) {
                throw new Exception("Não existe nenhuma Marca de Micro cadastrada no banco de dados " + e.getMessage());
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ListaDB = new javax.swing.JTable();
        campoListar = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButtonListar = new javax.swing.JButton();
        jButtonAlterar = new javax.swing.JButton();
        jButtonRemover = new javax.swing.JButton();
        jButtonVoltar = new javax.swing.JButton();
        jButtonCadastrarNova = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        Box_MarcaMicro = new javax.swing.JComboBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ListaDB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Marca", "Descrição do Modelo de Microcomputador"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ListaDB.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(ListaDB);

        campoListar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                campoListarKeyPressed(evt);
            }
        });

        jLabel1.setText("Descrição da Modelo:");

        jButtonListar.setText("Listar");
        jButtonListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonListarActionPerformed(evt);
            }
        });

        jButtonAlterar.setText("Alterar");
        jButtonAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAlterarActionPerformed(evt);
            }
        });

        jButtonRemover.setText("Remover");
        jButtonRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoverActionPerformed(evt);
            }
        });

        jButtonVoltar.setText("Voltar");
        jButtonVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVoltarActionPerformed(evt);
            }
        });

        jButtonCadastrarNova.setText("Cadastrar Novo Modelo");
        jButtonCadastrarNova.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCadastrarNovaActionPerformed(evt);
            }
        });

        jLabel2.setText("Marca do Modelo:");

        Box_MarcaMicro.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jMenu1.setText("Arquivo");
        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 443, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(Box_MarcaMicro, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButtonListar, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(campoListar))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonAlterar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonRemover)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonCadastrarNova)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonVoltar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(campoListar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Box_MarcaMicro, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonListar, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButtonCadastrarNova, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonAlterar, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                    .addComponent(jButtonVoltar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonRemover, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void jButtonAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAlterarActionPerformed
        if (ListaDB.getSelectedRow() >= 0) {
            ModeloMicro selecionadoModeloMicro = new ModeloMicro();
            selecionadoModeloMicro = listaArray.get(ListaDB.getSelectedRow());

            AlterarModeloMicro alterarModeloMicro = new AlterarModeloMicro(selecionadoModeloMicro, this.logado);
            alterarModeloMicro.setVisible(true);
            dispose();

        } else {
            JOptionPane.showMessageDialog(null, "Escolha algum Modelo listado na tabela para alterá-lo!");
        };
    }//GEN-LAST:event_jButtonAlterarActionPerformed

    ArrayList<ModeloMicro> listaArray;

    private void jButtonListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonListarActionPerformed

        try {

            ModeloMicro filtroModeloMicro = new ModeloMicro();

            if (campoListar.getText().trim().equals("") == false) {
                filtroModeloMicro.setModelo(campoListar.getText());
            } else {
                filtroModeloMicro.setModelo("");
            }

            filtroModeloMicro.setIdModelo(0);

            //FILTRO MARCA
            if (Box_MarcaMicro.getSelectedItem().equals("Marca do Micro")) {
                MarcaMicro vazio = new MarcaMicro();
                vazio.setIdMarca(0);
                vazio.setMarca("");
                filtroModeloMicro.setMarca(vazio);

            } else {
                int SelecionadoMarcaMicro = Box_MarcaMicro.getSelectedIndex() - 1;
                filtroModeloMicro.setMarca(allMarcasMicros.get(SelecionadoMarcaMicro));

            }

            listaArray = Fachada.getInstancia().listarModeloMicro(filtroModeloMicro);

            DefaultTableModel tabela = new DefaultTableModel();
            tabela.setColumnIdentifiers(new String[]{"Marca", "Descrição do Modelo de Microcomputador"});

            for (ModeloMicro este : listaArray) {
                tabela.addRow(new String[]{este.getMarca().getMarca(), este.getModelo()});
            }

            ListaDB.setModel(tabela);
            ListaDB.getColumnModel().getColumn(0).setMinWidth(90);
            ListaDB.getColumnModel().getColumn(0).setMaxWidth(90);

        } catch (Exception e) {

            JOptionPane.showMessageDialog(null, "Erro ao listar - " + e.getMessage());
        }

    }//GEN-LAST:event_jButtonListarActionPerformed

    private void jButtonRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoverActionPerformed
        if (ListaDB.getSelectedRow() >= 0) {
            ModeloMicro removerModeloMicro = new ModeloMicro();
            removerModeloMicro = listaArray.get(ListaDB.getSelectedRow());

            if (JOptionPane.showConfirmDialog(new JFrame(),
                    "Tem certeza que deseja remover este Modelo (" + removerModeloMicro.getModelo() + ")? \n(É necessário que nenhum usuário possua este tipo de Modelo)",
                    "Remover Modelo", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                try {

                    int selectedrow = (ListaDB.getSelectedRow());
                    Fachada.getInstancia().removerModeloMicro(removerModeloMicro);

                    JOptionPane.showMessageDialog(null, "Modelo removido com sucesso!");

                    listaArray.remove(selectedrow);
                    DefaultTableModel tabela = new DefaultTableModel();
                    tabela.setColumnIdentifiers(new String[]{"Marca", "Descrição do Modelo de Microcomputador"});

                    for (ModeloMicro este : listaArray) {
                        tabela.addRow(new String[]{este.getMarca().getMarca(), este.getModelo()});
                    }

                    ListaDB.setModel(tabela);

                    ListaDB.getColumnModel().getColumn(0).setMinWidth(90);
                    ListaDB.getColumnModel().getColumn(0).setMaxWidth(90);

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }
            } else {

                JOptionPane.showMessageDialog(rootPane, "Operação cancelada.");
                return;
            }
        } else {

            JOptionPane.showMessageDialog(rootPane, "Escolha algum Modelo da lista para removê-lo.");
        }

    }//GEN-LAST:event_jButtonRemoverActionPerformed

    private void jButtonVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVoltarActionPerformed
        TelaPrincipal inicial = new TelaPrincipal(this.logado);
        inicial.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButtonVoltarActionPerformed

    private void campoListarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoListarKeyPressed
        int key = evt.getKeyCode();
        if (key == KeyEvent.VK_ENTER) {
            jButtonListar.doClick();
        }
    }//GEN-LAST:event_campoListarKeyPressed

    private void jButtonCadastrarNovaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCadastrarNovaActionPerformed
        CadastrarModeloMicro cadastrarConfig = new CadastrarModeloMicro(this.logado);
        cadastrarConfig.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButtonCadastrarNovaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListarModeloMicro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListarModeloMicro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListarModeloMicro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListarModeloMicro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListarModeloMicro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox Box_MarcaMicro;
    private javax.swing.JTable ListaDB;
    private javax.swing.JTextField campoListar;
    private javax.swing.JButton jButtonAlterar;
    private javax.swing.JButton jButtonCadastrarNova;
    private javax.swing.JButton jButtonListar;
    private javax.swing.JButton jButtonRemover;
    private javax.swing.JButton jButtonVoltar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
